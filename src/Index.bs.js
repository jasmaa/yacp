// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Http from "./Http.bs.js";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function handleRequest(request) {
  var url = new URL(request.url);
  var searchParams = new URLSearchParams(url.search);
  var targetUrl = searchParams.get("targetURL");
  if (targetUrl == null) {
    return Promise.resolve(new Response("no targetURL provided", Http.$$Response.makeInit(400, undefined, Caml_option.some(Js_dict.fromArray([[
                                  "Content-Type",
                                  "text/plain"
                                ]])), undefined)));
  }
  var req = new Request(targetUrl, Http.$$Request.makeInit(undefined, "GET", undefined, undefined, undefined, undefined));
  var __x = fetch(req);
  var __x$1 = __x.then(function (res) {
        var res$1 = new Response(res.body, Http.$$Response.makeInit(undefined, undefined, Caml_option.some(res.headers), undefined));
        res$1.headers.set("Access-Control-Allow-Origin", "*");
        res$1.headers.set("Access-Control-Allow-Methods", "GET");
        res$1.headers.append("Vary", "Origin");
        return Promise.resolve(res$1);
      });
  return __x$1.catch(function (err) {
              console.log(err);
              return Promise.resolve(new Response("could not resolve targetURL", Http.$$Response.makeInit(400, undefined, Caml_option.some(Js_dict.fromArray([[
                                            "Content-Type",
                                            "text/plain"
                                          ]])), undefined)));
            });
}

addEventListener("fetch", (function ($$event) {
        $$event.respondWith(handleRequest($$event.request));
        
      }));

export {
  handleRequest ,
  
}
/*  Not a pure module */
